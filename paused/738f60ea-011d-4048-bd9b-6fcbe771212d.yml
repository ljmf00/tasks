summary: Write about controversy around package managers lockfile
notes: |+
  # The controversy around package managers lockfile in libraries

  A lot of package managers use a lockfile mechanism to reliably reproduce their
  packages across different environments. This mechanism is used when other
  environment build packages that do not use pinned dependency versions and end
  up using a modified version compatible with the version expression specified in
  the package manifest file.

  ## But what is a lock file?

  A lockfile is normally a generated file by the package manager that contains
  the information about the exact versions currently used to build a package
  successfully the way is intended to be. Some lockfiles include other metadata
  about the package used such as checksums to ensure integrity.

  This way, package managers can more easily replicate the same builds on
  different environments.

  ### Advantages



  ### Security disadvantages



  ## You might say, why not pin the versions, instead?

  Well, if [semantic versioning](https://semver.org/) standard is strictly
  followed by the package maintainers, breaking changes wouldn't be a big of a
  deal, although, the package will always be different. In a real world
  situation, breaking changes happens all the time, even if the intention is only
  a bug fix. Sometimes things get out of control and because of the todays
  systems complexity, regression bugs can easily happen.

  However, by specifying a version range covering patches or minor versions is
  more practically useful for a situation where the latest non-breackable version
  is preferable.

  Also, just pinning versions doesn't solve integrity issues.

  ## Why reproducible builds are important?

tags:
- blog
project: personal
priority: P2
delegatedto: ""
subtasks: []
dependencies: []
created: 2021-10-14T18:45:05.787050136+01:00
resolved: 0001-01-01T00:00:00Z
due: 0001-01-01T00:00:00Z
