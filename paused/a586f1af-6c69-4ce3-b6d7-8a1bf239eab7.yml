summary: Write DIP about ignore code coverage
notes: "# D Improvement Proposal: Ignore code from Coverage Analysis\n\n# Abstract\n\nThis DIP proposes a new way to pass information to the compiler to ignore\npossibly unreachable code blocks from Coverage Analysis reports by using a new\npragma.\n\n# Prior Work\n\nExisting programming languages with support for this capability can be\nseparated into two sections:\n\n- **External and unofficial support:** Languages that don't have official\n  support for coverage analysis but rather use external and widely used tools\n  to achieve that capability.\n- **Built-in and official support:** Languages that officially support built-in\n  coverage analysis or, in some official way, supports the desired feature.\n\n## External and unofficial support\n\nSome languages like Python, Ruby, and PHP use external tools to support\ncoverage analysis using commenting to achieve that. Particularly, it shouldn't\nbe the case for D, as it officially supports built-in coverage analysis using\nthe DMD compiler.\n\n### Python\n\nAs there's no such built-in coverage analysis for Python, it has coverage.py, a\nwidely used tool for measuring code coverage of Python programs. To achieve the\ndesired behaviour of excluding unreachable code, it uses `# pragma: no cover`\n[1] comment in a single statement or an entire clause.\n\n```python\na = foo()\nif debug:   # pragma: no cover\n\t\tmsg = \"blah blah\"\n    log_message(msg, a)\nb = bar()\n```\n\n### Ruby\n\nSimilarly to Python, SimpleCov, a widely used code coverage analysis tool for\nRuby, uses `# :nocov:` comment block that can be configurable [2].\n\n```ruby\n# :nocov:\ndef my_debug_method\n  do_something\nend\n# :nocov:\n```\n\n### PHP\n\nFollowing almost the same approach, PHPUnit is a testing framework for PHP\nprogramming language. To ignore code blocks from coverage reports [3], you can\nuse `@codeCoverageIgnore` inside a multi comment block.\n\n```php\n/**\n * @codeCoverageIgnore\n */\nclass Foo\n{\n    public function bar()\n    {}\n}\n\nclass Bar\n{\n    /**\n     * @codeCoverageIgnore\n     */\n    public function foo()\n    {}\n}\n```\n\nAdditionally, it has `@codeCoverageIgnoreStart` and `@codeCoverageIgnoreEnd` to\nenable/disable coverage report on a single scope.\n\n```php\nif ($foobarDebug) {\n    // @codeCoverageIgnoreStart\n    print '*';\n    // @codeCoverageIgnoreEnd\n}\n```\n\n## Built-in and official support\n\n### C#\n\nDespites Python, Ruby, and PHP use external tools to achieve this, C#\nofficially provides an attribute `ExcludeFromCodeCoverage` for this purpose\n[4], by writing:\n\n```csharp\npublic class FooBar\n{\n    [ExcludeFromCodeCoverage]\n    public string DummyProperty { get; set; }\n \n    // ...\n}\n```\n\n# Description\n\nYou may have code in your files that you know won’t be executed, and therefore\nnot covered, and you want to tell D compiler to ignore it when doing coverage\nanalysis. Examples range from code blocks for debugging purpose to dummy code.\n\n## Rationale\n\n### Introduces false coverage reports\n\nWithout this capability you may have reports without 100% of coverage\n\n### Ignoring debug code\n\nSometimes you may write debug code that is not covered and probably shouldn't\nbe covered by the tests\n\n## Existing solutions\n\nCurrently there's no official or unofficial solution for that in D programming\nlanguage.\n\n## Grammar Changes\n\nNone.\n\n## References\n\n1.\n   [https://coverage.readthedocs.io/en/latest/excluding.html](https://coverage.readthedocs.io/en/latest/excluding.html)\n2.\n   [https://rubydoc.info/gems/simplecov/SimpleCov/Configuration#nocov_token-instance_method](https://rubydoc.info/gems/simplecov/SimpleCov/Configuration#nocov_token-instance_method)\n3.\n   [https://phpunit.de/manual/3.7/en/code-coverage-analysis.html#code-coverage-analysis.ignoring-code-blocks](https://phpunit.de/manual/3.7/en/code-coverage-analysis.html#code-coverage-analysis.ignoring-code-blocks)\n4.\n[https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.codeanalysis.excludefromcodecoverageattribute](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.codeanalysis.excludefromcodecoverageattribute)\n"
tags:
- dip
project: dlang
priority: P2
delegatedto: ""
subtasks: []
dependencies: []
created: 2021-10-14T18:40:48.463892094+01:00
resolved: 0001-01-01T00:00:00Z
due: 0001-01-01T00:00:00Z
